//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DxChinook.Data.XPO.Models;
namespace DxChinook.Data.XPO.Models
{
	public partial class ChinookUnitOfWork : UnitOfWork
	{
		public ChinookUnitOfWork() : base() { }
		public ChinookUnitOfWork(DevExpress.Xpo.Metadata.XPDictionary dictionary) : base(dictionary) { }
		public ChinookUnitOfWork(IDataLayer layer, params IDisposable[] disposeOnDisconnect) : base(layer, disposeOnDisconnect) { }
		public ChinookUnitOfWork(IObjectLayer layer, params IDisposable[] disposeOnDisconnect) : base(layer, disposeOnDisconnect) { }
	}
}
namespace Microsoft.Extensions.DependencyInjection
{
	public static class ChinookXpoServiceCollectionExtensions
	{
		public static IServiceCollection AddChinookAsXpoDefaultUnitOfWork(this IServiceCollection serviceCollection, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null)
		{
			Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
			return serviceCollection.AddXpoDefaultUnitOfWork(useDataLayerAsSingletone, optionsBuilder);
		}
		public static IServiceCollection AddChinookAsXpoDefaultSession(this IServiceCollection serviceCollection, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null)
		{
			Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
			return serviceCollection.AddXpoDefaultSession(useDataLayerAsSingletone, optionsBuilder);
		}
		public static IServiceCollection AddChinookUnitOfWork(this IServiceCollection serviceCollection, bool useDataLayerAsSingletone = true, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null)
		{
			Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
			return serviceCollection.AddXpoCustomSession<ChinookUnitOfWork>(useDataLayerAsSingletone, optionsBuilder);
		}
		public static IServiceCollection AddChinookXpoDefaultDataLayer(this IServiceCollection serviceCollection, ServiceLifetime lifetime, Action<DataLayerOptionsBuilder> customDataLayerOptionsBuilder = null)
		{
			Action<DataLayerOptionsBuilder> optionsBuilder = CreateDataLayerOptionsBuilder(customDataLayerOptionsBuilder);
			return serviceCollection.AddXpoDefaultDataLayer(lifetime, customDataLayerOptionsBuilder);
		}
		static Action<DataLayerOptionsBuilder> CreateDataLayerOptionsBuilder(Action<DataLayerOptionsBuilder> injectCustomDataLayerOptionsBuilder)
		{
			return (options) =>
			{
				options
				.UseConnectionString(ConnectionHelper.ConnectionString)
				.UseEntityTypes(ConnectionHelper.GetPersistentTypes());
				if (injectCustomDataLayerOptionsBuilder != null)
				{
					injectCustomDataLayerOptionsBuilder(options);
				}
			};
		}
	}
}
